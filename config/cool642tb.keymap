#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_MOUSE_DEFAULT_SCRL_VAL 100
#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q                &kp W   &kp E      &kp R          &kp T                                               &kp Y          &kp U  &kp I                   &kp O                &kp P
&mt LCTRL A          &kp S   &kp D      &kp F          &kp G      &bt BT_NXT         &trans                &kp H          &kp J  &kp K                   &kp L                &lt 4 MINUS
&mt LEFT_SHIFT Z     &kp X   &kp C      &kp V          &kp B      &kp LS(LC(SPACE))  &trans                &kp N          &kp M  &mt LEFT_CONTROL COMMA  &mt LEFT_ALT PERIOD  &lt 3 SLASH
&mt LEFT_ALT ESCAPE  &trans  &kp LCTRL  &mt LCTRL F13  &lt 1 TAB  &lt 2 SPACE        &mt LEFT_SHIFT ENTER  &kp BACKSPACE                                                      &mt RCTRL F14
            >;

            sensor-bindings = <&scroll_up_down>, <&scroll_up_down>;
        };

        number_layer {
            bindings = <
&kp NUMBER_1  &kp N2     &kp N3     &kp N4     &kp N5                             &kp N6         &kp N7                &kp N8                 &kp N9            &kp N0
&trans        &mkp MCLK  &mkp LCLK  &mkp RCLK  &mo 3              &trans  &trans  &kp GRAVE      &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp EQUAL         &kp SEMICOLON
&trans        &trans     &mkp MB4   &mkp MB5   &kp LS(LC(SPACE))  &trans  &trans  &kp BACKSLASH  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES
&trans        &trans     &trans     &trans     &trans             &trans  &trans  &trans                                                                        &trans
            >;
        };

        function_layer {
            bindings = <
&trans  &trans    &kp UP_ARROW  &kp LC(LS(S))  &kp RC(UP_ARROW)                    &kp F1   &kp F2   &kp F3  &kp F4  &kp F5
&trans  &kp LEFT  &kp DOWN      &kp RIGHT      &kp RC(RIGHT)       &trans  &trans  &kp F6   &kp F7   &kp F8  &kp F9  &kp F12
&trans  &trans    &kp LC(C)     &kp LC(V)      &kp RC(LEFT_ARROW)  &trans  &trans  &kp F10  &kp F11  &trans  &trans  &kp F12
&trans  &trans    &trans        &trans         &trans              &trans  &trans  &trans                            &trans
            >;
        };

        bluetooth_layer {
            bindings = <
&trans        &trans        &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_SEL 0  &bt BT_SEL 1  &trans  &trans  &trans  &trans  &trans  &trans                          &trans
            >;
        };

        mouse_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans                  &trans              &trans     &trans     &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp RC(RIGHT)       &mkp LCLK  &mkp RCLK  &mkp MCLK  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp RC(LEFT_ARROW)  &mkp MB4   &mkp MB5   &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                                               &trans
            >;
        };
    };
};
