#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_MOUSE_DEFAULT_SCRL_VAL 100
#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        comb1 {
            bindings = <&kp TAB>;
            key-positions = <11 10>;
        };

        comb2 {
            bindings = <&kp LS(ESCAPE)>;
            key-positions = <0 1>;
        };

        comb3 {
            bindings = <&kp CAPSLOCK>;
            key-positions = <22 23>;
        };

        comb4 {
            bindings = <&kp BACKSPACE>;
            key-positions = <9 8>;
        };

        comb5 {
            bindings = <&bt BT_CLR_ALL>;
            key-positions = <9 8>;
            timeout-ms = <0>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q       &kp W    &kp E      &kp R         &kp T                                           &kp Y          &kp U  &kp I      &kp O       &kp P
&kp A       &kp S    &kp D      &kp F         &kp G      &bt BT_NXT     &kp LCTRL             &kp H          &kp J  &kp K      &kp L       &lt 4 MINUS
&kp Z       &kp X    &kp C      &kp V         &kp B      &mt LCTRL TAB  &kp LEFT_SHIFT        &kp N          &kp M  &kp COMMA  &kp PERIOD  &lt 3 SLASH
&kp ESCAPE  &kp TAB  &kp LCTRL  &mt LALT F15  &lt 1 ESC  &lt 2 SPACE    &mt LEFT_SHIFT ENTER  &kp BACKSPACE                                &mt LEFT_SHIFT F14
            >;

            sensor-bindings =
                <&inc_dec_kp LA(TAB) LA(LS(TAB))>,
                <&scroll_up_down>;
        };

        number_layer {
            bindings = <
&kp NUMBER_1  &kp N2     &kp N3     &kp N4     &kp N5                  &kp N6  &kp N7     &kp N8    &kp N9    &kp N0
&kp GRAVE     &mkp MCLK  &mkp LCLK  &mkp RCLK  &mo 3   &trans  &trans  &trans  &kp LBKT   &kp RBKT  &kp APOS  &kp SEMICOLON
&trans        &trans     &mkp MB4   &mkp MB5   &trans  &trans  &trans  &trans  &kp EQUAL  &kp BSLH  &trans    &trans
&trans        &trans     &trans     &trans     &trans  &trans  &trans  &trans                                 &trans
            >;
        };

        function_layer {
            bindings = <
&trans  &trans    &kp UP_ARROW  &kp LC(LS(S))  &kp RC(UP_ARROW)                    &trans  &trans  &trans   &trans   &trans
&trans  &kp LEFT  &kp DOWN      &kp RIGHT      &kp RC(RIGHT)       &trans  &kp F1  &kp F2  &kp F3  &kp F4   &kp F5   &kp F6
&trans  &trans    &trans        &trans         &kp RC(LEFT_ARROW)  &trans  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans    &trans        &trans         &trans              &trans  &trans  &trans                            &trans
            >;
        };

        bluetooth_layer {
            bindings = <
&trans        &trans        &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_SEL 0  &bt BT_SEL 1  &trans  &trans  &trans  &trans  &trans  &trans                          &trans
            >;
        };

        mouse_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans                         &trans     &trans     &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &kp RC(RIGHT)  &mkp LCLK  &mkp RCLK  &mkp MCLK  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &kp RC(LEFT)   &mkp MB4   &mkp MB5   &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans         &trans                                   &trans
            >;
        };
    };
};
